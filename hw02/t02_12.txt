def h(n):
    return f(n) + g(n)

f(n) = O(n)
g(n) = O(n^2)
 
За першою властивістю О - "велике": f1 = O(g1), f2 = O(g2) -> f1 + f2 = O(max(g1, g2))

h(n) = f(n) + g(n) = O(max(n, n^2)) = O(n^2)

(1 + (1 + 1)) + (2 + (2 + (1 + 2))) + (3 + (3 + (1 + 2 + 3))) + ... + (n + (n + (1 + 2 + ... + n)))

sum{i=1}_{n} i + f(i) + f(i)= (n^3 + 6n^2 + 5n) / 6 + n(n + 1) / 2 =  (n^3 + 9n^2 + 8n) / 6

Оптимізація функції
def g(n):
    return (n**3 + 9*n**2 + 8*n) // 6     | O(1)
    